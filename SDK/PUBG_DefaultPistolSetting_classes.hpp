#pragma once

// PUBG FULL SDK - Generated By Respecter (5.3.4.11 [06/03/2019]) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "PUBG_DefaultPistolSetting_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// BlueprintGeneratedClass DefaultPistolSetting.DefaultPistolSetting_C
// 0x0000 (0x0D80 - 0x0D80)
class ADefaultPistolSetting_C : public ATslWeapon_Trajectory
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("BlueprintGeneratedClass DefaultPistolSetting.DefaultPistolSetting_C");
		return ptr;
	}


	void SimulateUnderwaterTrail(struct FVector* SurfaceImpactPoint, struct FVector* ShootDirection, float* TravelDistance);
	void SimulateUnderwaterHit(struct FVector* UnderwaterImpactPoint, struct FVector* ShootOrigin);
	void SimulateHit_UnReliable(struct FHitResult* Impact, struct FVector* RelLocation);
	void SimulateHit_Reliable(struct FHitResult* Impact, struct FVector* RelLocation);
	void Simulate_CreateAmmoInstance(struct FVector* ServerStartTrace, struct FVector* Dir, struct FAttackId* AttackId);
	void SetCurrentRecoilValue(float* InCurrent_RecoilValue);
	void SetCurrentBullet(int* InCurrent_Bullet);
	void ServerWallCheckTest(struct FVector* TraceStart, struct FVector* TraceEnd);
	void ServerTestBallistics(struct FVector* Origin, struct FVector* OriginDir);
	void ServerNotifyHit(TArray<int>* Ints2, uint32_t* uintr, uint32_t* uinta, uint32_t* uintp, uint32_t* uintb, float* L3, float* L4, float* CR_P, float* CR_Y, TArray<int>* Ints, unsigned char* h0, int* h1, int* h2, unsigned char* uint1, int* chksum1, int* checksum_CD, struct FVector* SI, struct FVector* L1, struct FVector* L2, int* LC, uint16_t* Segment, struct FVector* Dir0, unsigned char* bUnder, struct FVector* E1, float* S1, struct FVector* ClientImpactLocation, struct FVector* RelativeImpact, struct FHitResult* Impact, TArray<int>* Ints3, struct FVector* ClientOrigin, struct FVector* Origin, struct FVector* TraceStart, struct FVector_NetQuantizeNormal* ShootDir, float* TravelDistance, struct FAttackId* AttackId, uint32_t* HitSeq, struct FVector* RelLocation, float* SpeedLoss, struct FVector* OD, float* ts, struct FVector* IV);
	void ServerNotifyCrack(class ATslCharacter** TargetCharacter, struct FVector_NetQuantize* LocationRelative, float* BulletVelocity);
	void ServerNotifyAmmoSpawned(struct FVector* ServerStartTrace, struct FVector* Dir, struct FAttackId* AttackId);
	void ServerLogBodyPenetration(int* AttackId, struct FName* DamageZone, float* DamageDiff);
	void OnRep_WeaponSpread(float* LastWeaponSpread);
	bool IsRecoilDebugEnabled_BP();
	bool IsBulletInAir();
	class UWeaponTrajectoryData* GetWeaponTrajectoryData();
	struct FWeaponTrajectoryConfig GetWeaponTrajectoryConfig();
	struct FTrajectoryWeaponData GetTrajectoryConfig();
	float GetRecoilStartTime();
	struct FRecoilDebugInfo GetRecoilDebugInfo();
	int GetRecoilDebugCurrentBullet();
	struct FWeaponRecoilConfig GetRecoilConfig();
	float GetRecoilBlendInTime();
	float GetInertiaPitchAdditive();
	float GetCurrentStabilityVar();
	float GetCurrentReoveryTarget();
	float GetCurrentRecoilValue();
	struct FVector2D GetCurrentRecoilTarget();
	struct FRotator GetBulletRotation();
	struct FVector GetBulletLocation();
	void ClientWallCheckFail(struct FVector* TraceStart, struct FVector* TraceEnd, struct FVector* Impact);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
